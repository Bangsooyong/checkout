<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<!-- DBCP(Database Connection Pool)을 사용하는 DataSource -->
	<bean id="ds" class="oracle.jdbc.pool.OracleDataSource"><!--DB가 오라클데이터소스 -->
		<property name="URL" value="jdbc:oracle:thin:@localhost:1521:xe" /><!-- 
			대문자 url -->
		<property name="user" value="scott" />
		<property name="password" value="tiger" />
		<!-- 빈을 설정하고 프로퍼티를 설정하는 것은 스프링프레임웤이 디폴트생성자 부른다. 네임이 들어가는 것들은 이 클래스가 가지고 
			있는 맴버변수(필드)다. -->
	</bean>

	<!-- SqlSessionFactory: DataSource 객체를 사용해서 생성 -->
	<!-- 디폴트생성자 + set -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ds"></property>	<!-- 위의 아이디 참조 -->
		<property name="mapperLocations" value="classpath:mappers/**/*.xml"></property>
	</bean><!-- mappers 폴더 만들기 -->

	<!-- SqlSession: SqlSessionFactory 객체를 사용해서 생성 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"
		destroy-method="clearCache"><!-- 디폴트 생성자가 없어서 오류 -->
		<!-- 매개변수가 있는 생성자를 부를때 -->
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>

	<!-- ////////////////////////////////////////////// -->
	<!-- mail 기능을 위한 bean객체 추가 -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="25" />
		<property name="username" value="onlinemarketoperator@gmail.com" />
		<property name="password" value="dkdlxldnlf" />
		<property name="javaMailProperties">
			<props>
				<prop key="mail.transport.protocol">smtp</prop>
				<prop key="mail.smtp.auth">true</prop>
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>
	<!-- ////////////////////////////////////////////// -->
	
	<context:component-scan base-package="com.shop.app.persistence"></context:component-scan> 
		<context:component-scan base-package="com.shop.app.service"></context:component-scan>
</beans>

